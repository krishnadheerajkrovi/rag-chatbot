version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: rag_chatbot_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rag_chatbot
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Ollama Service (COMMENTED OUT - Using local Mac Ollama)
  # Uncomment if you want to use dockerized Ollama instead
  # ollama:
  #   image: ollama/ollama:latest
  #   container_name: rag_chatbot_ollama
  #   volumes:
  #     - ollama_data:/root/.ollama
  #   ports:
  #     - "11434:11434"
  #   environment:
  #     - OLLAMA_HOST=0.0.0.0
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rag_chatbot_backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/rag_chatbot
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - DEFAULT_MODEL=llama3.1:8b
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this-in-production}
      - VECTOR_STORE_PATH=/app/vector_store
      - PHOENIX_ENABLED=${PHOENIX_ENABLED:-true}
      - PHOENIX_COLLECTOR_ENDPOINT=${PHOENIX_COLLECTOR_ENDPOINT:-http://host.docker.internal:6006}
      - PHOENIX_PROJECT_NAME=${PHOENIX_PROJECT_NAME:-rag-chatbot}
    volumes:
      - ./backend/app:/app/app
      - backend_uploads:/app/uploads
      - vector_store:/app/vector_store
    ports:
      - "8000:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Streamlit Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rag_chatbot_frontend
    depends_on:
      - backend
    environment:
      - API_BASE_URL=http://backend:8000
    volumes:
      - ./frontend/app:/app/app
    ports:
      - "8501:8501"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  backend_uploads:
  vector_store:
